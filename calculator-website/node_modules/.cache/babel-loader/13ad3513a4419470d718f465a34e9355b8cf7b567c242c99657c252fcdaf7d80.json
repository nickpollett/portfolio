{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicholas Pollett\\\\Documents\\\\GitHub\\\\CollisionCalculator\\\\calculator-website\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { calculateCosts, aggregateTotals, filterDataByArea, adjustCounts } from '../utils/costCalculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  collisionData,\n  onResultsUpdate\n}) => {\n  _s();\n  const [viewport, setViewport] = useState({\n    latitude: 52.1332,\n    longitude: -106.6700,\n    zoom: 11,\n    bearing: 0,\n    pitch: 0\n  });\n  const [firstCorner, setFirstCorner] = useState(null);\n  const [previewArea, setPreviewArea] = useState(null);\n  const [selectedArea, setSelectedArea] = useState(null);\n  const mapRef = useRef(null);\n  const handleMouseMove = useCallback(event => {\n    if (firstCorner) {\n      const {\n        lng,\n        lat\n      } = event.lngLat;\n      const coordinates = [[[firstCorner.lng, firstCorner.lat], [firstCorner.lng, lat], [lng, lat], [lng, firstCorner.lat], [firstCorner.lng, firstCorner.lat]]];\n      setPreviewArea({\n        type: 'Polygon',\n        coordinates\n      });\n    }\n  }, [firstCorner]);\n  const handleFirstClick = useCallback(event => {\n    const {\n      lngLat\n    } = event;\n    setFirstCorner(lngLat);\n    setSelectedArea(null);\n    setPreviewArea(null);\n  }, []);\n  const handleSecondClick = useCallback(event => {\n    if (!firstCorner) return;\n    const {\n      lngLat\n    } = event;\n    const coordinates = [[[firstCorner.lng, firstCorner.lat], [firstCorner.lng, lngLat.lat], [lngLat.lng, lngLat.lat], [lngLat.lng, firstCorner.lat], [firstCorner.lng, firstCorner.lat]]];\n    const newArea = {\n      type: 'Polygon',\n      coordinates\n    };\n    setSelectedArea(newArea);\n    setPreviewArea(null);\n    const filteredData = filterDataByArea(collisionData, newArea);\n    const counts = {\n      INJURY: filteredData.filter(row => row.TYPE === 'INJURY').length,\n      FATALITY: filteredData.filter(row => row.TYPE === 'FATALITY').length,\n      PROPERTY: filteredData.filter(row => row.TYPE === 'PROPERTY').length\n    };\n    const formattedData = [{\n      TYPE: 'INJURY',\n      count: counts.INJURY\n    }, {\n      TYPE: 'FATALITY',\n      count: counts.FATALITY\n    }, {\n      TYPE: 'PROPERTY',\n      count: counts.PROPERTY\n    }];\n    const adjustedData = adjustCounts(formattedData);\n    const costData = calculateCosts(adjustedData);\n    const {\n      totals,\n      yearly,\n      daily\n    } = aggregateTotals(costData);\n    onResultsUpdate({\n      totals,\n      yearly,\n      daily\n    });\n    setFirstCorner(null);\n  }, [firstCorner, collisionData, onResultsUpdate]);\n  const handleMapClick = useCallback(event => {\n    if (!firstCorner) {\n      handleFirstClick(event);\n    } else {\n      handleSecondClick(event);\n    }\n  }, [firstCorner, handleFirstClick, handleSecondClick]);\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, {\n    ...viewport,\n    width: \"100%\",\n    height: \"100%\",\n    ref: mapRef,\n    mapboxAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    onMove: evt => setViewport(evt.viewport),\n    onClick: handleMapClick,\n    onMouseMove: handleMouseMove,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    children: [previewArea && /*#__PURE__*/_jsxDEV(Source, {\n      type: \"geojson\",\n      data: {\n        type: 'Feature',\n        geometry: previewArea\n      },\n      children: [/*#__PURE__*/_jsxDEV(Layer, {\n        id: \"preview-area\",\n        type: \"fill\",\n        paint: {\n          'fill-color': '#3FB1CE',\n          'fill-opacity': 0.2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Layer, {\n        id: \"preview-outline\",\n        type: \"line\",\n        paint: {\n          'line-color': '#3FB1CE',\n          'line-width': 1,\n          'line-dasharray': [2, 2]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), selectedArea && /*#__PURE__*/_jsxDEV(Source, {\n      type: \"geojson\",\n      data: {\n        type: 'Feature',\n        geometry: selectedArea\n      },\n      children: [/*#__PURE__*/_jsxDEV(Layer, {\n        id: \"selected-area\",\n        type: \"fill\",\n        paint: {\n          'fill-color': '#3FB1CE',\n          'fill-opacity': 0.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Layer, {\n        id: \"selected-area-outline\",\n        type: \"line\",\n        paint: {\n          'line-color': '#3FB1CE',\n          'line-width': 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"CvBprw9w/F+mtUx83y7qFrXaLR0=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactMapGL","Source","Layer","calculateCosts","aggregateTotals","filterDataByArea","adjustCounts","jsxDEV","_jsxDEV","MapComponent","collisionData","onResultsUpdate","_s","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","firstCorner","setFirstCorner","previewArea","setPreviewArea","selectedArea","setSelectedArea","mapRef","handleMouseMove","event","lng","lat","lngLat","coordinates","type","handleFirstClick","handleSecondClick","newArea","filteredData","counts","INJURY","filter","row","TYPE","length","FATALITY","PROPERTY","formattedData","count","adjustedData","costData","totals","yearly","daily","handleMapClick","width","height","ref","mapboxAccessToken","process","env","REACT_APP_MAPBOX_TOKEN","onMove","evt","onClick","onMouseMove","mapStyle","children","data","geometry","id","paint","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nicholas Pollett/Documents/GitHub/CollisionCalculator/calculator-website/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { calculateCosts, aggregateTotals, filterDataByArea, adjustCounts } from '../utils/costCalculations';\r\n\r\nconst MapComponent = ({ collisionData, onResultsUpdate }) => {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 52.1332,\r\n    longitude: -106.6700,\r\n    zoom: 11,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n\r\n  const [firstCorner, setFirstCorner] = useState(null);\r\n  const [previewArea, setPreviewArea] = useState(null);\r\n  const [selectedArea, setSelectedArea] = useState(null);\r\n  const mapRef = useRef(null);\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    if (firstCorner) {\r\n      const { lng, lat } = event.lngLat;\r\n      \r\n      const coordinates = [\r\n        [\r\n          [firstCorner.lng, firstCorner.lat],\r\n          [firstCorner.lng, lat],\r\n          [lng, lat],\r\n          [lng, firstCorner.lat],\r\n          [firstCorner.lng, firstCorner.lat],\r\n        ],\r\n      ];\r\n\r\n      setPreviewArea({\r\n        type: 'Polygon',\r\n        coordinates,\r\n      });\r\n    }\r\n  }, [firstCorner]);\r\n\r\n  const handleFirstClick = useCallback((event) => {\r\n    const { lngLat } = event;\r\n    setFirstCorner(lngLat);\r\n    setSelectedArea(null);\r\n    setPreviewArea(null);\r\n  }, []);\r\n\r\n  const handleSecondClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) return;\r\n\r\n      const { lngLat } = event;\r\n      const coordinates = [\r\n        [\r\n          [firstCorner.lng, firstCorner.lat],\r\n          [firstCorner.lng, lngLat.lat],\r\n          [lngLat.lng, lngLat.lat],\r\n          [lngLat.lng, firstCorner.lat],\r\n          [firstCorner.lng, firstCorner.lat],\r\n        ],\r\n      ];\r\n\r\n      const newArea = {\r\n        type: 'Polygon',\r\n        coordinates,\r\n      };\r\n\r\n      setSelectedArea(newArea);\r\n      setPreviewArea(null);\r\n\r\n      const filteredData = filterDataByArea(collisionData, newArea);\r\n\r\n      const counts = {\r\n        INJURY: filteredData.filter((row) => row.TYPE === 'INJURY').length,\r\n        FATALITY: filteredData.filter((row) => row.TYPE === 'FATALITY').length,\r\n        PROPERTY: filteredData.filter((row) => row.TYPE === 'PROPERTY').length,\r\n      };\r\n\r\n      const formattedData = [\r\n        { TYPE: 'INJURY', count: counts.INJURY },\r\n        { TYPE: 'FATALITY', count: counts.FATALITY },\r\n        { TYPE: 'PROPERTY', count: counts.PROPERTY },\r\n      ];\r\n\r\n      const adjustedData = adjustCounts(formattedData);\r\n      const costData = calculateCosts(adjustedData);\r\n      const { totals, yearly, daily } = aggregateTotals(costData);\r\n\r\n      onResultsUpdate({ totals, yearly, daily });\r\n      setFirstCorner(null);\r\n    },\r\n    [firstCorner, collisionData, onResultsUpdate]\r\n  );\r\n\r\n  const handleMapClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) {\r\n        handleFirstClick(event);\r\n      } else {\r\n        handleSecondClick(event);\r\n      }\r\n    },\r\n    [firstCorner, handleFirstClick, handleSecondClick]\r\n  );\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      ref={mapRef}\r\n      mapboxAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n      onMove={evt => setViewport(evt.viewport)}\r\n      onClick={handleMapClick}\r\n      onMouseMove={handleMouseMove}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n    >\r\n      {/* Show preview area while moving mouse */}\r\n      {previewArea && (\r\n        <Source type=\"geojson\" data={{ type: 'Feature', geometry: previewArea }}>\r\n          <Layer\r\n            id=\"preview-area\"\r\n            type=\"fill\"\r\n            paint={{\r\n              'fill-color': '#3FB1CE',\r\n              'fill-opacity': 0.2,\r\n            }}\r\n          />\r\n          <Layer\r\n            id=\"preview-outline\"\r\n            type=\"line\"\r\n            paint={{\r\n              'line-color': '#3FB1CE',\r\n              'line-width': 1,\r\n              'line-dasharray': [2, 2],\r\n            }}\r\n          />\r\n        </Source>\r\n      )}\r\n\r\n      {/* Show selected area after second click */}\r\n      {selectedArea && (\r\n        <Source type=\"geojson\" data={{ type: 'Feature', geometry: selectedArea }}>\r\n          <Layer\r\n            id=\"selected-area\"\r\n            type=\"fill\"\r\n            paint={{\r\n              'fill-color': '#3FB1CE',\r\n              'fill-opacity': 0.5,\r\n            }}\r\n          />\r\n          <Layer\r\n            id=\"selected-area-outline\"\r\n            type=\"line\"\r\n            paint={{\r\n              'line-color': '#3FB1CE',\r\n              'line-width': 2,\r\n            }}\r\n          />\r\n        </Source>\r\n      )}\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}