{"ast":null,"code":"import _objectSpread from \"C:/Users/Nicholas Pollett/Documents/GitHub/CollisionCalculator/calculator-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nlet sourceCounter = 0;\nfunction createSource(map, id, props) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = _objectSpread({}, props);\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n/* eslint-disable complexity */\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n  let changedKey = '';\n  let changedKeyCount = 0;\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n  if (!changedKeyCount) {\n    return;\n  }\n  const type = props.type;\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ('setCoordinates' in source && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates(props.coordinates);\n  } else if ('setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(\"Unable to update <Source> prop: \".concat(changedKey));\n  }\n}\n/* eslint-enable complexity */\nfunction Source(props) {\n  const map = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n  const id = useMemo(() => props.id || \"jsx-source-\".concat(sourceCounter++), []);\n  useEffect(() => {\n    if (map) {\n      /* global setTimeout */\n      const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n      return () => {\n        var _a;\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getSource(id)) {\n          // Parent effects are destroyed before child ones, see\n          // https://github.com/facebook/react/issues/16728\n          // Source can only be removed after all child layers are removed\n          const allLayers = (_a = map.getStyle()) === null || _a === void 0 ? void 0 : _a.layers;\n          if (allLayers) {\n            for (const layer of allLayers) {\n              // @ts-ignore (2339) source does not exist on all layer types\n              if (layer.source === id) {\n                map.removeLayer(layer.id);\n              }\n            }\n          }\n          map.removeSource(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n  return source && React.Children.map(props.children, child => child && cloneElement(child, {\n    source: id\n  })) || null;\n}\nexport default Source;","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","useRef","cloneElement","MapContext","assert","deepEqual","sourceCounter","createSource","map","id","props","style","_loaded","options","_objectSpread","children","addSource","getSource","updateSource","source","prevProps","type","changedKey","changedKeyCount","key","setData","data","updateImage","url","coordinates","setCoordinates","setUrl","setTiles","tiles","console","warn","concat","Source","getMap","propsRef","setStyleLoaded","forceUpdate","setTimeout","version","on","off","allLayers","_a","getStyle","layers","layer","removeLayer","removeSource","undefined","current","Children","child"],"sources":["C:\\Users\\Nicholas Pollett\\Documents\\GitHub\\CollisionCalculator\\calculator-website\\node_modules\\react-map-gl\\src\\components\\source.ts"],"sourcesContent":["import * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  MapInstance,\n  AnySource,\n  CustomSource,\n  GeoJSONSource,\n  GeoJSONSourceImplementation,\n  ImageSource,\n  ImageSourceImplemtation,\n  VectorSource,\n  AnySourceImplementation\n} from '../types';\n\nexport type SourceProps = (AnySource | CustomSource) & {\n  id?: string;\n  children?: any;\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map: MapInstance, id: string, props: SourceProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source: AnySourceImplementation, props: SourceProps, prevProps: SourceProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    (source as GeoJSONSourceImplementation).setData((props as GeoJSONSource).data as any);\n  } else if (type === 'image') {\n    (source as ImageSourceImplemtation).updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ('setCoordinates' in source && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates((props as unknown as ImageSource).coordinates);\n  } else if ('setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl((props as unknown as VectorSource).url);\n        break;\n      case 'tiles':\n        source.setTiles((props as unknown as VectorSource).tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props: SourceProps) {\n  const map = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      /* global setTimeout */\n      const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getSource(id)) {\n          // Parent effects are destroyed before child ones, see\n          // https://github.com/facebook/react/issues/16728\n          // Source can only be removed after all child layers are removed\n          const allLayers = map.getStyle()?.layers;\n          if (allLayers) {\n            for (const layer of allLayers) {\n              // @ts-ignore (2339) source does not exist on all layer types\n              if (layer.source === id) {\n                map.removeLayer(layer.id);\n              }\n            }\n          }\n          map.removeSource(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nexport default Source;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}