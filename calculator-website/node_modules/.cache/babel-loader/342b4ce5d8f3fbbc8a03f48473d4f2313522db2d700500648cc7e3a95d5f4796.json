{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicholas Pollett\\\\Documents\\\\GitHub\\\\CollisionCalculator\\\\calculator-website\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { calculateCosts, aggregateTotals, filterDataByArea, adjustCounts } from '../utils/costCalculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  collisionData,\n  onResultsUpdate\n}) => {\n  _s();\n  const [viewport, setViewport] = useState({\n    latitude: 52.1332,\n    longitude: -106.6700,\n    zoom: 11,\n    width: '100%',\n    height: '100%'\n  });\n  const [firstCorner, setFirstCorner] = useState(null);\n  const [previewCorner, setPreviewCorner] = useState(null);\n  const [selectedArea, setSelectedArea] = useState(null);\n  const mapRef = useRef(null);\n\n  // Create a rectangle from two points\n  const createRectangle = useCallback((point1, point2) => {\n    if (!point1 || !point2) return null;\n    return {\n      type: 'Polygon',\n      coordinates: [[[point1.lng, point1.lat], [point1.lng, point2.lat], [point2.lng, point2.lat], [point2.lng, point1.lat], [point1.lng, point1.lat] // Close the polygon\n      ]]\n    };\n  }, []);\n  const handleFirstClick = useCallback(event => {\n    const {\n      lngLat\n    } = event;\n    setFirstCorner(lngLat);\n    setPreviewCorner(lngLat);\n    setSelectedArea(null);\n  }, []);\n  const handleMouseMove = useCallback(event => {\n    if (firstCorner) {\n      const {\n        lngLat\n      } = event;\n      setPreviewCorner(lngLat);\n      setSelectedArea(createRectangle(firstCorner, lngLat));\n    }\n  }, [firstCorner, createRectangle]);\n  const handleSecondClick = useCallback(event => {\n    if (!firstCorner) return;\n    const {\n      lngLat\n    } = event;\n    const rectangle = createRectangle(firstCorner, lngLat);\n    setSelectedArea(rectangle);\n\n    // Filter collision data within the selected area\n    const filteredData = filterDataByArea(collisionData, rectangle);\n    const counts = {\n      INJURY: filteredData.filter(row => row.TYPE === 'INJURY').length,\n      FATALITY: filteredData.filter(row => row.TYPE === 'FATALITY').length,\n      PROPERTY: filteredData.filter(row => row.TYPE === 'PROPERTY').length\n    };\n    const formattedData = [{\n      TYPE: 'INJURY',\n      count: counts.INJURY\n    }, {\n      TYPE: 'FATALITY',\n      count: counts.FATALITY\n    }, {\n      TYPE: 'PROPERTY',\n      count: counts.PROPERTY\n    }];\n    const adjustedData = adjustCounts(formattedData);\n    const costData = calculateCosts(adjustedData);\n    const {\n      totals,\n      yearly,\n      daily\n    } = aggregateTotals(costData);\n    onResultsUpdate({\n      totals,\n      yearly,\n      daily\n    });\n    setFirstCorner(null);\n    setPreviewCorner(null);\n  }, [firstCorner, createRectangle, collisionData, onResultsUpdate]);\n  const handleMapClick = useCallback(event => {\n    if (!firstCorner) {\n      handleFirstClick(event);\n    } else {\n      handleSecondClick(event);\n    }\n  }, [firstCorner, handleFirstClick, handleSecondClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactMapGL, {\n      ...viewport,\n      ref: mapRef,\n      mapboxAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      onViewportChange: setViewport,\n      onClick: handleMapClick,\n      onMouseMove: handleMouseMove,\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      scrollZoom: {\n        speed: 0.01,\n        smooth: true\n      },\n      dragPan: true,\n      dragRotate: false // Disabled rotation for simpler navigation\n      ,\n      touchZoom: true,\n      doubleClickZoom: false // Disabled to avoid conflicts with selection\n      ,\n      minZoom: 1,\n      maxZoom: 20,\n      children: selectedArea && /*#__PURE__*/_jsxDEV(Source, {\n        type: \"geojson\",\n        data: {\n          type: 'Feature',\n          geometry: selectedArea\n        },\n        children: [/*#__PURE__*/_jsxDEV(Layer, {\n          id: \"selected-area\",\n          type: \"fill\",\n          paint: {\n            'fill-color': '#3FB1CE',\n            'fill-opacity': 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Layer, {\n          id: \"selected-area-outline\",\n          type: \"line\",\n          paint: {\n            'line-color': '#3FB1CE',\n            'line-width': 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), firstCorner && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        cursor: 'crosshair'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"Md/p5NO4j9Xw5JWXxIBl/rNXQ8U=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactMapGL","Source","Layer","calculateCosts","aggregateTotals","filterDataByArea","adjustCounts","jsxDEV","_jsxDEV","MapComponent","collisionData","onResultsUpdate","_s","viewport","setViewport","latitude","longitude","zoom","width","height","firstCorner","setFirstCorner","previewCorner","setPreviewCorner","selectedArea","setSelectedArea","mapRef","createRectangle","point1","point2","type","coordinates","lng","lat","handleFirstClick","event","lngLat","handleMouseMove","handleSecondClick","rectangle","filteredData","counts","INJURY","filter","row","TYPE","length","FATALITY","PROPERTY","formattedData","count","adjustedData","costData","totals","yearly","daily","handleMapClick","style","position","children","ref","mapboxAccessToken","process","env","REACT_APP_MAPBOX_TOKEN","onViewportChange","onClick","onMouseMove","mapStyle","scrollZoom","speed","smooth","dragPan","dragRotate","touchZoom","doubleClickZoom","minZoom","maxZoom","data","geometry","id","paint","fileName","_jsxFileName","lineNumber","columnNumber","top","left","right","bottom","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Nicholas Pollett/Documents/GitHub/CollisionCalculator/calculator-website/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { calculateCosts, aggregateTotals, filterDataByArea, adjustCounts } from '../utils/costCalculations';\r\n\r\nconst MapComponent = ({ collisionData, onResultsUpdate }) => {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 52.1332,\r\n    longitude: -106.6700,\r\n    zoom: 11,\r\n    width: '100%',\r\n    height: '100%',\r\n  });\r\n\r\n  const [firstCorner, setFirstCorner] = useState(null);\r\n  const [previewCorner, setPreviewCorner] = useState(null);\r\n  const [selectedArea, setSelectedArea] = useState(null);\r\n  const mapRef = useRef(null);\r\n\r\n  // Create a rectangle from two points\r\n  const createRectangle = useCallback((point1, point2) => {\r\n    if (!point1 || !point2) return null;\r\n    \r\n    return {\r\n      type: 'Polygon',\r\n      coordinates: [[\r\n        [point1.lng, point1.lat],\r\n        [point1.lng, point2.lat],\r\n        [point2.lng, point2.lat],\r\n        [point2.lng, point1.lat],\r\n        [point1.lng, point1.lat], // Close the polygon\r\n      ]],\r\n    };\r\n  }, []);\r\n\r\n  const handleFirstClick = useCallback((event) => {\r\n    const { lngLat } = event;\r\n    setFirstCorner(lngLat);\r\n    setPreviewCorner(lngLat);\r\n    setSelectedArea(null);\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    if (firstCorner) {\r\n      const { lngLat } = event;\r\n      setPreviewCorner(lngLat);\r\n      setSelectedArea(createRectangle(firstCorner, lngLat));\r\n    }\r\n  }, [firstCorner, createRectangle]);\r\n\r\n  const handleSecondClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) return;\r\n\r\n      const { lngLat } = event;\r\n      const rectangle = createRectangle(firstCorner, lngLat);\r\n      setSelectedArea(rectangle);\r\n\r\n      // Filter collision data within the selected area\r\n      const filteredData = filterDataByArea(collisionData, rectangle);\r\n\r\n      const counts = {\r\n        INJURY: filteredData.filter((row) => row.TYPE === 'INJURY').length,\r\n        FATALITY: filteredData.filter((row) => row.TYPE === 'FATALITY').length,\r\n        PROPERTY: filteredData.filter((row) => row.TYPE === 'PROPERTY').length,\r\n      };\r\n\r\n      const formattedData = [\r\n        { TYPE: 'INJURY', count: counts.INJURY },\r\n        { TYPE: 'FATALITY', count: counts.FATALITY },\r\n        { TYPE: 'PROPERTY', count: counts.PROPERTY },\r\n      ];\r\n\r\n      const adjustedData = adjustCounts(formattedData);\r\n      const costData = calculateCosts(adjustedData);\r\n      const { totals, yearly, daily } = aggregateTotals(costData);\r\n\r\n      onResultsUpdate({ totals, yearly, daily });\r\n      setFirstCorner(null);\r\n      setPreviewCorner(null);\r\n    },\r\n    [firstCorner, createRectangle, collisionData, onResultsUpdate]\r\n  );\r\n\r\n  const handleMapClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) {\r\n        handleFirstClick(event);\r\n      } else {\r\n        handleSecondClick(event);\r\n      }\r\n    },\r\n    [firstCorner, handleFirstClick, handleSecondClick]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        ref={mapRef}\r\n        mapboxAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={setViewport}\r\n        onClick={handleMapClick}\r\n        onMouseMove={handleMouseMove}\r\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n        scrollZoom={{\r\n          speed: 0.01,\r\n          smooth: true\r\n        }}\r\n        dragPan={true}\r\n        dragRotate={false}  // Disabled rotation for simpler navigation\r\n        touchZoom={true}\r\n        doubleClickZoom={false}  // Disabled to avoid conflicts with selection\r\n        minZoom={1}\r\n        maxZoom={20}\r\n      >\r\n        {selectedArea && (\r\n          <Source type=\"geojson\" data={{ type: 'Feature', geometry: selectedArea }}>\r\n            <Layer\r\n              id=\"selected-area\"\r\n              type=\"fill\"\r\n              paint={{\r\n                'fill-color': '#3FB1CE',\r\n                'fill-opacity': 0.5,\r\n              }}\r\n            />\r\n            <Layer\r\n              id=\"selected-area-outline\"\r\n              type=\"line\"\r\n              paint={{\r\n                'line-color': '#3FB1CE',\r\n                'line-width': 2,\r\n              }}\r\n            />\r\n          </Source>\r\n        )}\r\n      </ReactMapGL>\r\n      {firstCorner && (\r\n        <div \r\n          style={{ \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0, \r\n            bottom: 0, \r\n            cursor: 'crosshair' \r\n          }} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}