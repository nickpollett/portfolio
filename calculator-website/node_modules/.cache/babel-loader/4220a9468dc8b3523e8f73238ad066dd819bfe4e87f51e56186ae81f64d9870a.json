{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Nicholas Pollett\\Documents\\GitHub\\CollisionCalculator\\calculator-website\\node_modules\\react-map-gl\\src\\types\\style-spec.ts"],"sourcesContent":["/*\n * Mapbox Style Specification types\n * Note that these are NOT base map specific - all compatible map libraries implement the same spec\n */\nimport type {\n  FilterSpecification,\n  PropertyValueSpecification,\n  BackgroundLayerSpecification as BackgroundLayer,\n  CircleLayerSpecification as CircleLayer,\n  FillLayerSpecification as FillLayer,\n  FillExtrusionLayerSpecification as FillExtrusionLayer,\n  HeatmapLayerSpecification as HeatmapLayer,\n  HillshadeLayerSpecification as HillshadeLayer,\n  LineLayerSpecification as LineLayer,\n  RasterLayerSpecification as RasterLayer,\n  SymbolLayerSpecification as SymbolLayer,\n  GeoJSONSourceSpecification as GeoJSONSource,\n  VideoSourceSpecification as VideoSource,\n  ImageSourceSpecification as ImageSource,\n  VectorSourceSpecification as VectorSource,\n  RasterSourceSpecification as RasterSource,\n  RasterDEMSourceSpecification as RasterDemSource\n} from '@maplibre/maplibre-gl-style-spec';\n\n// Layers\nexport type {\n  BackgroundLayer,\n  CircleLayer,\n  FillLayer,\n  FillExtrusionLayer,\n  HeatmapLayer,\n  HillshadeLayer,\n  LineLayer,\n  RasterLayer,\n  SymbolLayer\n};\n\n/**\n * @deprecated use `fog` instead\n */\nexport type SkyLayer = {\n  id: string;\n  type: 'sky';\n  metadata?: unknown;\n  minzoom?: number;\n  maxzoom?: number;\n  filter?: FilterSpecification;\n  layout?: {\n    visibility?: 'visible' | 'none';\n  };\n  paint?: {\n    'sky-atmosphere-color'?: PropertyValueSpecification<string>;\n    'sky-atmosphere-halo-color'?: PropertyValueSpecification<string>;\n    'sky-atmosphere-sun'?: PropertyValueSpecification<number[]>;\n    'sky-atmosphere-sun-intensity'?: PropertyValueSpecification<number>;\n    'sky-gradient'?: PropertyValueSpecification<string>;\n    'sky-gradient-center'?: PropertyValueSpecification<number[]>;\n    'sky-gradient-radius'?: PropertyValueSpecification<number>;\n    'sky-opacity'?: PropertyValueSpecification<number>;\n    'sky-type'?: 'gradient' | 'atmosphere';\n  };\n};\n\nexport type AnyLayer =\n  | BackgroundLayer\n  | CircleLayer\n  | FillLayer\n  | FillExtrusionLayer\n  | HeatmapLayer\n  | HillshadeLayer\n  | LineLayer\n  | RasterLayer\n  | SymbolLayer\n  | SkyLayer;\n\n// Sources\nexport {GeoJSONSource, VideoSource, ImageSource, VectorSource, RasterSource, RasterDemSource};\n\n// Not part of the style spec but a valid source\nexport interface CanvasSource {\n  type: 'canvas';\n  coordinates: number[][];\n  animate?: boolean;\n  canvas: string | HTMLCanvasElement;\n}\n\nexport type AnySource =\n  | GeoJSONSource\n  | VideoSource\n  | ImageSource\n  | VectorSource\n  | RasterSource\n  | RasterDemSource\n  | CanvasSource;\n\n// Other style types\n\nexport type {\n  StyleSpecification as MapboxStyle,\n  LightSpecification as Light,\n  TerrainSpecification as Terrain\n} from '@maplibre/maplibre-gl-style-spec';\n\n// The following types are not yet supported by maplibre\nexport interface Fog {\n  color?: PropertyValueSpecification<string>;\n  'horizon-blend'?: PropertyValueSpecification<number>;\n  range?: PropertyValueSpecification<number[]>;\n}\n\ntype ProjectionNames =\n  | 'albers'\n  | 'equalEarth'\n  | 'equirectangular'\n  | 'lambertConformalConic'\n  | 'mercator'\n  | 'naturalEarth'\n  | 'winkelTripel'\n  | 'globe';\n\nexport type Projection =\n  | ProjectionNames\n  | {\n      name: ProjectionNames;\n      center?: [number, number];\n      parallels?: [number, number];\n    };\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}