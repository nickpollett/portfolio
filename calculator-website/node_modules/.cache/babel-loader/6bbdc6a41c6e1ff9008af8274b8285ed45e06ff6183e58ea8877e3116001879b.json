{"ast":null,"code":"import _objectSpread from\"C:/Users/Nicholas Pollett/Documents/GitHub/CollisionCalculator/calculator-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useCallback}from'react';import ReactMapGL,{Source,Layer}from'react-map-gl';import'mapbox-gl/dist/mapbox-gl.css';import{calculateCosts,aggregateTotals,filterDataByArea,adjustCounts}from'../utils/costCalculations';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapComponent=_ref=>{let{collisionData,onResultsUpdate}=_ref;const[viewport,setViewport]=useState({latitude:52.1332,longitude:-106.6700,zoom:11,bearing:0,pitch:0});const[firstCorner,setFirstCorner]=useState(null);const[previewArea,setPreviewArea]=useState(null);const[selectedArea,setSelectedArea]=useState(null);const mapRef=useRef(null);const handleMouseMove=useCallback(event=>{if(firstCorner){const{lng,lat}=event.lngLat;const coordinates=[[[firstCorner.lng,firstCorner.lat],[firstCorner.lng,lat],[lng,lat],[lng,firstCorner.lat],[firstCorner.lng,firstCorner.lat]]];setPreviewArea({type:'Polygon',coordinates});}},[firstCorner]);const handleFirstClick=useCallback(event=>{const{lngLat}=event;setFirstCorner(lngLat);setSelectedArea(null);setPreviewArea(null);},[]);const handleSecondClick=useCallback(event=>{if(!firstCorner)return;const{lngLat}=event;const coordinates=[[[firstCorner.lng,firstCorner.lat],[firstCorner.lng,lngLat.lat],[lngLat.lng,lngLat.lat],[lngLat.lng,firstCorner.lat],[firstCorner.lng,firstCorner.lat]]];const newArea={type:'Polygon',coordinates};setSelectedArea(newArea);setPreviewArea(null);const filteredData=filterDataByArea(collisionData,newArea);console.log(\"Filtered Data:\",filteredData);// Log selected collision events\nconst counts={INJURY:filteredData.filter(row=>row.TYPE==='INJURY').length,FATALITY:filteredData.filter(row=>row.TYPE==='FATALITY').length,PROPERTY:filteredData.filter(row=>row.TYPE==='PROPERTY').length};console.log(\"Collision Counts:\",counts);// Log the number of each type of collision\nconst formattedData=[{TYPE:'INJURY',count:counts.INJURY},{TYPE:'FATALITY',count:counts.FATALITY},{TYPE:'PROPERTY',count:counts.PROPERTY}];const adjustedData=adjustCounts(formattedData);console.log(\"Adjusted Data:\",adjustedData);// Log the adjusted counts\nconst costData=calculateCosts(adjustedData);console.log(\"Cost Data:\",costData);// Log the cost breakdown\nconst{totals,yearly,daily}=aggregateTotals(costData);console.log(\"Totals:\",totals);console.log(\"Yearly Costs:\",yearly);console.log(\"Daily Costs:\",daily);onResultsUpdate({totals,yearly,daily});setFirstCorner(null);},[firstCorner,collisionData,onResultsUpdate]);const handleMapClick=useCallback(event=>{if(!firstCorner){handleFirstClick(event);}else{handleSecondClick(event);}},[firstCorner,handleFirstClick,handleSecondClick]);return/*#__PURE__*/_jsxs(ReactMapGL,_objectSpread(_objectSpread({},viewport),{},{width:\"100%\",height:\"100%\",ref:mapRef,mapboxAccessToken:process.env.REACT_APP_MAPBOX_TOKEN,onMove:evt=>setViewport(evt.viewport),onClick:handleMapClick,onMouseMove:handleMouseMove,mapStyle:\"mapbox://styles/mapbox/streets-v11\",children:[previewArea&&/*#__PURE__*/_jsxs(Source,{type:\"geojson\",data:{type:'Feature',geometry:previewArea},children:[/*#__PURE__*/_jsx(Layer,{id:\"preview-area\",type:\"fill\",paint:{'fill-color':'#3FB1CE','fill-opacity':0.2}}),/*#__PURE__*/_jsx(Layer,{id:\"preview-outline\",type:\"line\",paint:{'line-color':'#3FB1CE','line-width':1,'line-dasharray':[2,2]}})]}),selectedArea&&/*#__PURE__*/_jsxs(Source,{type:\"geojson\",data:{type:'Feature',geometry:selectedArea},children:[/*#__PURE__*/_jsx(Layer,{id:\"selected-area\",type:\"fill\",paint:{'fill-color':'#3FB1CE','fill-opacity':0.5}}),/*#__PURE__*/_jsx(Layer,{id:\"selected-area-outline\",type:\"line\",paint:{'line-color':'#3FB1CE','line-width':2}})]})]}));};export default MapComponent;","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactMapGL","Source","Layer","calculateCosts","aggregateTotals","filterDataByArea","adjustCounts","jsx","_jsx","jsxs","_jsxs","MapComponent","_ref","collisionData","onResultsUpdate","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","firstCorner","setFirstCorner","previewArea","setPreviewArea","selectedArea","setSelectedArea","mapRef","handleMouseMove","event","lng","lat","lngLat","coordinates","type","handleFirstClick","handleSecondClick","newArea","filteredData","console","log","counts","INJURY","filter","row","TYPE","length","FATALITY","PROPERTY","formattedData","count","adjustedData","costData","totals","yearly","daily","handleMapClick","_objectSpread","width","height","ref","mapboxAccessToken","process","env","REACT_APP_MAPBOX_TOKEN","onMove","evt","onClick","onMouseMove","mapStyle","children","data","geometry","id","paint"],"sources":["C:/Users/Nicholas Pollett/Documents/GitHub/CollisionCalculator/calculator-website/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { calculateCosts, aggregateTotals, filterDataByArea, adjustCounts } from '../utils/costCalculations';\r\n\r\nconst MapComponent = ({ collisionData, onResultsUpdate }) => {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 52.1332,\r\n    longitude: -106.6700,\r\n    zoom: 11,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n\r\n  const [firstCorner, setFirstCorner] = useState(null);\r\n  const [previewArea, setPreviewArea] = useState(null);\r\n  const [selectedArea, setSelectedArea] = useState(null);\r\n  const mapRef = useRef(null);\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    if (firstCorner) {\r\n      const { lng, lat } = event.lngLat;\r\n      \r\n      const coordinates = [\r\n        [\r\n          [firstCorner.lng, firstCorner.lat],\r\n          [firstCorner.lng, lat],\r\n          [lng, lat],\r\n          [lng, firstCorner.lat],\r\n          [firstCorner.lng, firstCorner.lat],\r\n        ],\r\n      ];\r\n\r\n      setPreviewArea({\r\n        type: 'Polygon',\r\n        coordinates,\r\n      });\r\n    }\r\n  }, [firstCorner]);\r\n\r\n  const handleFirstClick = useCallback((event) => {\r\n    const { lngLat } = event;\r\n    setFirstCorner(lngLat);\r\n    setSelectedArea(null);\r\n    setPreviewArea(null);\r\n  }, []);\r\n\r\n  const handleSecondClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) return;\r\n  \r\n      const { lngLat } = event;\r\n      const coordinates = [\r\n        [\r\n          [firstCorner.lng, firstCorner.lat],\r\n          [firstCorner.lng, lngLat.lat],\r\n          [lngLat.lng, lngLat.lat],\r\n          [lngLat.lng, firstCorner.lat],\r\n          [firstCorner.lng, firstCorner.lat],\r\n        ],\r\n      ];\r\n  \r\n      const newArea = {\r\n        type: 'Polygon',\r\n        coordinates,\r\n      };\r\n  \r\n      setSelectedArea(newArea);\r\n      setPreviewArea(null);\r\n  \r\n      const filteredData = filterDataByArea(collisionData, newArea);\r\n  \r\n      console.log(\"Filtered Data:\", filteredData); // Log selected collision events\r\n  \r\n      const counts = {\r\n        INJURY: filteredData.filter((row) => row.TYPE === 'INJURY').length,\r\n        FATALITY: filteredData.filter((row) => row.TYPE === 'FATALITY').length,\r\n        PROPERTY: filteredData.filter((row) => row.TYPE === 'PROPERTY').length,\r\n      };\r\n  \r\n      console.log(\"Collision Counts:\", counts); // Log the number of each type of collision\r\n  \r\n      const formattedData = [\r\n        { TYPE: 'INJURY', count: counts.INJURY },\r\n        { TYPE: 'FATALITY', count: counts.FATALITY },\r\n        { TYPE: 'PROPERTY', count: counts.PROPERTY },\r\n      ];\r\n  \r\n      const adjustedData = adjustCounts(formattedData);\r\n      console.log(\"Adjusted Data:\", adjustedData); // Log the adjusted counts\r\n  \r\n      const costData = calculateCosts(adjustedData);\r\n      console.log(\"Cost Data:\", costData); // Log the cost breakdown\r\n  \r\n      const { totals, yearly, daily } = aggregateTotals(costData);\r\n      console.log(\"Totals:\", totals);\r\n      console.log(\"Yearly Costs:\", yearly);\r\n      console.log(\"Daily Costs:\", daily);\r\n  \r\n      onResultsUpdate({ totals, yearly, daily });\r\n      setFirstCorner(null);\r\n    },\r\n    [firstCorner, collisionData, onResultsUpdate]\r\n  );\r\n  \r\n\r\n  const handleMapClick = useCallback(\r\n    (event) => {\r\n      if (!firstCorner) {\r\n        handleFirstClick(event);\r\n      } else {\r\n        handleSecondClick(event);\r\n      }\r\n    },\r\n    [firstCorner, handleFirstClick, handleSecondClick]\r\n  );\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      ref={mapRef}\r\n      mapboxAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n      onMove={evt => setViewport(evt.viewport)}\r\n      onClick={handleMapClick}\r\n      onMouseMove={handleMouseMove}\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n    >\r\n      {/* Show preview area while moving mouse */}\r\n      {previewArea && (\r\n        <Source type=\"geojson\" data={{ type: 'Feature', geometry: previewArea }}>\r\n          <Layer\r\n            id=\"preview-area\"\r\n            type=\"fill\"\r\n            paint={{\r\n              'fill-color': '#3FB1CE',\r\n              'fill-opacity': 0.2,\r\n            }}\r\n          />\r\n          <Layer\r\n            id=\"preview-outline\"\r\n            type=\"line\"\r\n            paint={{\r\n              'line-color': '#3FB1CE',\r\n              'line-width': 1,\r\n              'line-dasharray': [2, 2],\r\n            }}\r\n          />\r\n        </Source>\r\n      )}\r\n\r\n      {/* Show selected area after second click */}\r\n      {selectedArea && (\r\n        <Source type=\"geojson\" data={{ type: 'Feature', geometry: selectedArea }}>\r\n          <Layer\r\n            id=\"selected-area\"\r\n            type=\"fill\"\r\n            paint={{\r\n              'fill-color': '#3FB1CE',\r\n              'fill-opacity': 0.5,\r\n            }}\r\n          />\r\n          <Layer\r\n            id=\"selected-area-outline\"\r\n            type=\"line\"\r\n            paint={{\r\n              'line-color': '#3FB1CE',\r\n              'line-width': 2,\r\n            }}\r\n          />\r\n        </Source>\r\n      )}\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}